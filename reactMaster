1. INTRODUCTION
  
2. STYLED COMPONENTS
   const 컴포넌트명 = styled.태그명
   ex) const Center = css`
          display :flex;
          justify-content:center;
          align-items: center;
          `;
          
        const Flex = div `
          ${flexCenter}
          `;
          
          - 스타일에 Props 적용
              장점 => 변수에 의해 스타일을 바꿀 수 있다.
              내부적으로 props 받기 가능하다, 그에 따라 스타일 변경가능
          - global Theme
          - Transient props
3. TYPESCRIPT
  3.1 DefinitelyTyped
      - 내가 쓰고 있는 타입 바꾸기!
  3.2 Typing the Props
      - object 에게 type을 설명해주는 시간 필요
      - interface 안에다가 설명
          - interface 활용해서 Object 보호
  3.3 Option Props
      <code>
        import React, { ReactNodeArray, useState } from "react";
import styled from "styled-components";

const Father = styled.div`
display: flex;
`;
const Wrapper = styled.div`
width: 100vw;
height: 100vh;
border: 1px solid red;
display: flex;
justify-content: center;
align-items: center;
background-color: ${(props) => props.theme.bgColor};
`;

const Box = styled.div`
color: ${(props) => props.theme.textColor};
`;

export default function App() {
const [value, setValue] = useState("");
const onChange = (event: React.FormEvent<HTMLInputElement>) => {
  // 위에 어떤 타입이 들어가는 지는 공부 해야안다..
  // onChange 함수가 InputElement에 의해서 실행될 것을 안다.
  const {
    currentTarget: { value },
  } = event;
  setValue(value);
  //currentTarget이란 target과 같다.
};
const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {
  event.preventDefault();
  console.log("hello", value);
};

return (
  <div>
    <form onSubmit={onSubmit}>
      <input
        value={value}
        onChange={onChange}
        type="text"
        placeholder="username"
      />
      <button>Log in</button>
    </form>
  </div>
);
}
      </code>
      
  3.4 State
      - component를 업데이트 하고 싶다면 state도 바꿔야함
      - state를 바꾸면 React가 새로고침 하는 것도 알고 있다.
      - 기본적으로 default 값 생서하면 TypeScript => value 타입 설정
  3.5 Forms
  3.6 Themes
  
4. REACT ROUTER
  4.1 BrowserRouter
  4.2 createBrowserRouter
  4.3 errorElement
  4.4 useNavigate
  4.5 useParams
  4.6 Outlet
  4.7 useOutletContext
  
5. CRYPTO TRACKER
